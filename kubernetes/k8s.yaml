# kubectl logs <POD-NAME> -c angular -n <NAME-SPACE>
# kubectl logs <POD-NAME> -c spring-boot -n <NAME-SPACE>
# kubectl logs <POD-NAME> -c mysql-server -n <NAME-SPACE>
# kubectl logs <POD-NAME> --all-containers -n <NAME-SPACE>

apiVersion: v1
kind: Namespace
metadata:
  name: <APP_NAMESPACE>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: <APP_NAME>
  namespace: <APP_NAMESPACE>
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: <APP_NAME>
    spec:
      containers:
      # Angular
      - name: <CONTAINER_NAME_ONE>
        image: <IMAGE_TAG>
        # resources:
        #   requests: {}
        #   limits: {}
        resources:
          requests:
            cpu: '0.5'
            memory: 128Mi
          limits:
            cpu: 1
            memory: 1Gi
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: angular
        volumeMounts:
        - name: tz-america-one
          mountPath: /etc/localtime
      # Spring Boot
      - name: <CONTAINER_NAME_TWO>
        image: <IMAGE_TAG_TWO>
        resources:
          requests:
            cpu: '0.5'
            memory: 128Mi
          limits:
            cpu: 1
            memory: 2Gi
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
          name: spring
        volumeMounts:
        - name: tz-america-two
          mountPath: /etc/localtime
      # MySQL
      - name: <CONTAINER_NAME_THREE>
        image: <IMAGE_TAG_THREE>
        resources:
          requests:
            memory: "128Mi"
            cpu: "0.5"
          limits:
            memory: "900Mi"
            cpu: "1"
        imagePullPolicy: Always
        ports:
        - containerPort: 3306
          name: mysql
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: "DevOps2023"
          - name: MYSQL_PASSWORD
            value: "DevOps2023"
          - name: MYSQL_USER
            value: "admin"
          - name: MYSQL_DATABASE
            value: "crud"
        volumeMounts:
        - name: tz-america-three
          mountPath: /etc/localtime
        - name: mysql-data
          mountPath: /var/lib/mysql
      volumes:
        - name: tz-america-one
          hostPath:
            path: /usr/share/zoneinfo/America/Fortaleza
            type: File
        - name: tz-america-two
          hostPath:
            path: /usr/share/zoneinfo/America/Fortaleza
            type: File
        - name: tz-america-three
          hostPath:
            path: /usr/share/zoneinfo/America/Fortaleza
            type: File
        - name: mysql-data
          emptyDir: {}
  selector:
    matchLabels:
        app: <APP_NAME>
---
apiVersion: v1
kind: Service
metadata:
  name: <APP_NAME>-svc
  namespace: <APP_NAMESPACE>
  labels:
    app: <APP_NAME>
  annotations:
    metallb.universe.tf/address-pool: int-pool
spec:
  selector:
    app: <APP_NAME>
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: angular
    - protocol: TCP
      port: 8081
      targetPort: 8081
      name: spring
    - protocol: TCP
      port: 3306
      targetPort: 3306
      name: mysql
  type: LoadBalancer
  #loadBalancerIP: 10.130.x.x
  externalTrafficPolicy: Local
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
   name: <APP_NAME>
   namespace: <APP_NAMESPACE>
   annotations:
      haproxy.org/check: enabled
      haproxy.org/forwarded-for: enabled
      haproxy.org/load-balance: roundrobin
      haproxy.org/ssl-redirect: 'true'
      haproxy.org/ssl-redirect-code: '301'
spec:
  rules:
    - host: hello-world-test.unilab.edu.br
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
               service:
                  name: <APP_NAME>-svc
                  port:
                     number: 80
